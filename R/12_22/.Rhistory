dbl_var <- c(1, 2.5, 4.5)
int_val <- c(1L, 6L, 10L)
int_val
dbl_var
log_var <- c(TRUE, FALSE, T, F)
log_val
log_var
c(1, c(2))
typeof(int_var)
typeof(int_val)
is.integer(int_val)
is.atomic(int_val)
x <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9))
x
str(x)
is.list(mtcars)
mtcars
y <- 1:10
str(y)
attr(y, "my_attribute") <- "This is a vector"
y
str(attributes(y))
is.list(str(attributes(y)))
is.list(attributes(y))
attributes(y)
attributes(y)$1
attributes(y)$0
attributes(y)[[1]]
is.string(attributes(y)[[1]])
is.str(attributes(y)[[1]])
is.character(attributes(y)[[1]])
structure(1:10, my_attribute="This is a vector")
b <- array(1:12, c(2, 3, 2))
b
a <- matrix(1:6, ncol = 3, nrow = 2)
a
I(list(1,2,3))
list(1,2,3)
x <- c(2.1, 4.2, 3.3, 5.4)
x
x[c(3,1]
x[c(3,1)]
order(x)
x[0]
(y <- setNames(x, letters[1:4]))
y
y$$a
y$a
y[c("d")]
y[c("d", "a")]
x <- c(a = 1, b = 2)
x[1]
x[[1]]
x$1
x$a
mtcars$cyl
x <- list(abc=1)
x
x$
a
x[["x"]]
x <- 1:5
x[-1]
x
x[-1]
x[-2]
x[-3]
x[-4]
x[-5]
x[-1]
x[-0]
x[-1]
x[-2]
x[-3]
x[-4]
df <- data.frame(a = c(1, 10, NA))
df
df$a
df$a < 5
df$a[df$a < 5]
set.seed(10)
?%in%
?%n
?in
?
s
??in
??%in%
ftype
library(pryr)
?"internal generic"
foo <- structure(list(), class="foo")
foo
foo <- list()
foo
str(foo)
class(foo) <- "foo"
str(foo)
class(foo)
inherits(foo, "foo")
e <- new.env()
e$a <- FALSE
a
e$a
search()
as.environment("package:stats")
e
ls(e)
parent.env(e)
ls.str()
ls.str(e)
ls.str()
clear
ls.str()
ls.str(e)
e$a
e$a
e[["a"]]
get("a", envir=e)
?runif
ll
